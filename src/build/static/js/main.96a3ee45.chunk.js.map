{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ProjectList.js","pages/project-content.js","pages/ProjectListPage.js","pages/NotFoundPage.js","components/CommentsList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ProjectPage.js","NavBar.js","pages/ToDoPage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","AboutPage","ProjectList","projects","map","project","key","className","to","name","title","content","substring","articles","ProjectListPage","projectContent","NotFoundPage","CommentsList","comments","comment","username","text","UpvotesSection","projectName","upvotes","setProjectInfo","upvoteProject","a","fetch","method","result","json","body","id","onClick","AddCommentForm","useState","setUsername","commentText","setCommentText","addComment","JSON","stringify","headers","respBody","type","value","onChange","event","target","rows","cols","ProjectPage","match","params","find","projectInfo","useEffect","results","fetchData","otherProjects","filter","paragraph","NavBar","ToDoPage","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96a3ee45.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <>\n    <h1>Hello, welcome to my website</h1>\n    <p>\n        Welcome to my blog! Proin as;dkfljask;djashdfuv nasdf\n        asfsa;dkfljksadflkjas;dfkl jlk;jsafdjl;kdjf askdlfjsak\n        asd;kfljsafsdaf\n    </p>\n    <p>\n        safjhasdf sadfkjhsa sadf sajdkfh askj sadf ksadkjfh sad\n        fsdkljsfas dufhinqc yrebiur aqrfewkjrhf ew\n    </p>\n    </>\n);\n\nexport default HomePage","import React from 'react';\n\nconst AboutPage = () => (\n    <>\n    <h1>Hello, welcome to my website</h1>\n    <p>\n        Welcome to my blog! Proin as;dkfljask;djashdfuv nasdf\n        asfsa;dkfljksadflkjas;dfkl jlk;jsafdjl;kdjf askdlfjsak\n        asd;kfljsafsdaf\n    </p>\n    <p>\n        safjhasdf sadfkjhsa sadf sajdkfh askj sadf ksadkjfh sad\n        fsdkljsfas dufhinqc yrebiur aqrfewkjrhf ew\n    </p>\n    </>\n);\n\nexport default AboutPage","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({ projects }) => (\n    <>\n    {projects.map((project, key) => (\n        <Link className=\"article-list-item\" key={key} to={`/project/${project.name}`}>\n            <h3>{project.title}</h3>\n            <p>{project.content[0].substring(0, 150)}...</p>\n        </Link>\n    ))}\n    </>\n) \n\nexport default ProjectList","const articles = [\n    {\n        name: 'learn-react',\n        title: 'The Fastest Way to Learn React',\n        content: [\n            `Welcome! Today we're going to be talking about the fastest way to\n            learn React. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo.\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis,\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at\n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus.\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus.\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },    {\n        name: 'learn-node',\n        title: 'How to Build a Node Server in 10 Minutes',\n        content: [\n            `In this article, we're going to be talking looking at a very quick way\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo.\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis,\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at\n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus.\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus.\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },     {\n        name: 'my-thoughts-on-resumes',\n        title: 'My Thoughts on Resumes',\n        content: [\n            `Today is the day I talk about something which scares most people: resumes.\n            In reality, I'm not sure why people have such a hard time with proin congue\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo.\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis,\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at\n            sodales purus euismod.`,\n            `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus.\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n            `Etiam nec lectus urna. Sed sodales ultrices dapibus.\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\n        ]\n    },  \n];\n\nexport default articles;","import React from 'react';\nimport ProjectList from '../components/ProjectList';\nimport projectContent from './project-content';\n\nconst ProjectListPage = () => (\n    <>\n    <h1>Projects</h1>\n    <ProjectList projects={projectContent} />\n    </>\n);\n\nexport default ProjectListPage","import React from 'react';\n\nconst NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n)\n\nexport default NotFoundPage","import React from 'react';\n\nconst CommentsList = ({ comments }) => (\n    <>\n    <h3>Comments:</h3>\n    {comments.map((comment, key) => (\n        <div className=\"comment\" key={key}>\n            <h4>{comment.username}</h4>\n            <p>{comment.text}</p>\n        </div>\n    ))}\n    </>\n);\n\nexport default CommentsList;","import React from 'react';\n\nconst UpvotesSection = ({ projectName, upvotes, setProjectInfo }) =>  {\n\n    const upvoteProject = async () => {\n        const result = await fetch(`/api/projects/${projectName}/upvote`, {\n            method: 'post',\n        });\n        const body = await result.json();\n        setProjectInfo(body);\n    }\n    return (\n        <div id=\"upvotes-section\">\n        <button onClick={() => upvoteProject()}>Add Upvote</button>\n        <p>This post has been upvoted {upvotes} times.</p>\n        </div>\n    );\n}\n\nexport default UpvotesSection;","import React, { useState } from 'react';\n\nconst AddCommentForm = ({ projectName, setProjectInfo }) => {\n    const [username, setUsername] = useState('');\n    const [commentText, setCommentText] = useState('');\n\n    const addComment = async () => {\n        const result = await fetch(`/api/projects/${projectName}/add-comment`, {\n            method: 'post',\n            body: JSON.stringify({\"username\": username,\"text\": commentText}),\n            headers: { \n                'Content-Type': 'application/json',\n            }\n        });\n        const respBody = await result.json();\n        setProjectInfo(respBody);\n        setUsername('');\n        setCommentText('');\n    }\n\n    return (\n        <div id=\"add-comment-form\"> \n            <h3>Add a Comment</h3>\n            <label>\n                Name: \n                <input type=\"text\" value={username} onChange={(event) => setUsername(event.target.value)}/>\n            </label>\n            <label>\n                Comment:\n                <textarea rows=\"4\" cols=\"50\" value={commentText} onChange={(event) => setCommentText(event.target.value)}/>\n            </label>\n            <button onClick={() => addComment()}>Add Comment</button>\n        </div>\n    );\n}\n\nexport default AddCommentForm;","import React, { useState, useEffect } from 'react';\nimport ProjectList from '../components/ProjectList';\nimport NotFoundPage from './NotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '../components/UpvoteSection';\nimport AddCommentForm from '../components/AddCommentForm';\nimport projectContent from './project-content';\n\nconst ProjectPage = ( { match } ) => {\n    const name = match.params.name;\n    const project = projectContent.find(project => project.name === name);\n\n    const [projectInfo, setProjectInfo] = useState({ upvotes: 0, comments: [] });\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const results = await fetch(`/api/projects/${name}`); \n            const body = await results.json(); \n            setProjectInfo(body);\n        }\n        fetchData();\n    }, [name]);\n\n    if (!project) return <NotFoundPage/>\n\n    const otherProjects = projectContent.filter(project => project.name !== name);\n\n    return (\n        <>\n        <h1>{project.title}</h1>\n        <UpvotesSection projectName={name} upvotes={projectInfo.upvotes} setProjectInfo={setProjectInfo}/>\n        {project.content.map((paragraph, key) => (\n            <p key={key}>{paragraph}</p>\n        ))}\n        <CommentsList comments={projectInfo.comments} />\n        <AddCommentForm projectName={name} setProjectInfo={setProjectInfo} />\n        <h3>Other Articles:</h3>\n        <ProjectList projects={otherProjects}  />\n        </>\n    );\n    }\n\nexport default ProjectPage","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst NavBar = () => (\n    <nav>\n        <ul>\n            <li>\n                <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n                <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n                <Link to=\"/projectlist\">Project List</Link>\n            </li>\n            <li>\n                <Link to=\"/todo\">ToDo Items</Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default NavBar","import React from 'react'; \n\n\nconst ToDoPage = () => (\n    <>\n    <h1>ToDo Items</h1>\n    <h3>ToDo List</h3>\n    <ul>make to do list a check list</ul>\n    <ul>make to do list editable from the website</ul>\n    <ul>rewrite server in go</ul>\n    <ul>rewrite website to be a portfolio and not a blog lol</ul>\n    <ul>implement workflow through git/pipeline</ul>\n    <ul>populate with actual content</ul>\n    <ul>look into bootstrap or tailwind or such</ul>\n    <ul>secure database/look into other dbs</ul>\n    <ul>add login </ul>\n    <ul>make it so only I can view the todo page</ul>\n    <ul>update web tab icon</ul>\n    </>\n)\n\nexport default ToDoPage;","import HomePage from './pages/HomePage';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom'\nimport AboutPage from './pages/AboutPage';\nimport ProjectListPage from './pages/ProjectListPage';\nimport ProjectPage from './pages/ProjectPage';\nimport NavBar from './NavBar';\nimport NotFoundPage from './pages/NotFoundPage'\nimport ToDoPage from './pages/ToDoPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\" id='nav'>\n        <NavBar />\n          {/* TODO: wrap in own css wrapper */}\n          <div id=\"page-body\">\n            <Switch>\n              <Route path=\"/\" component={HomePage} exact />\n              <Route path=\"/about\" component={AboutPage} exact/>\n              <Route path=\"/projectlist\" component={ProjectListPage} exact />\n              <Route path=\"/project/:name\" component={ProjectPage} />\n              <Route path=\"/todo\" component={ToDoPage} />\n              <Route component={NotFoundPage} />\n            </Switch>\n          </div>\n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}